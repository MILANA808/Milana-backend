name: Run via Cloudflare Tunnel

on:
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Start FastAPI
        run: nohup uvicorn main:app --host 0.0.0.0 --port 8000 &

      - name: Download cloudflared
        run: |
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      - name: Start tunnel
        id: tunnel
        run: |
          set -e
          cloudflared tunnel --url http://localhost:8000 --no-autoupdate > tunnel.log 2>&1 &
          sleep 6
          URL=$(grep -o 'https://[a-zA-Z0-9.-]*trycloudflare.com' tunnel.log | head -n1)
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "Public URL: $URL"

      - name: Post URL as comment
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.tunnel.outputs.url }}';
            const body = `ðŸ”“ AKSI backend live via Cloudflare Tunnel: ${url}`;
            if (context.payload.pull_request) {
              await github.rest.issues.createComment({
                owner: context.repo.owner, repo: context.repo.repo,
                issue_number: context.payload.pull_request.number, body
              });
            } else {
              await github.rest.repos.createCommitComment({
                owner: context.repo.owner, repo: context.repo.repo,
                commit_sha: context.sha, body
              });
            }
